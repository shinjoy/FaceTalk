package kr.nomad.mars;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import kr.nomad.mars.dao.BannerAdDao;
import kr.nomad.mars.dao.EventCommentDao;
import kr.nomad.mars.dao.EventDao;
import kr.nomad.mars.dao.FaqDao;
import kr.nomad.mars.dao.NoticeDao;
import kr.nomad.mars.dao.QnaDao;
import kr.nomad.mars.dao.SidoDao;
import kr.nomad.mars.dao.SiteDao;
import kr.nomad.mars.dao.UserDao;
import kr.nomad.mars.dto.BannerAd;
import kr.nomad.mars.dto.Event;
import kr.nomad.mars.dto.Faq;
import kr.nomad.mars.dto.Notice;
import kr.nomad.mars.dto.Qna;
import kr.nomad.mars.dto.User;
import kr.nomad.util.F;
import kr.nomad.util.ImageUtil;
import kr.nomad.util.Paging;
import kr.nomad.util.Response;
import kr.nomad.util.T;
import kr.nomad.util.file.UniqFileRenamePolicy;
import net.sf.json.JSONObject;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.google.gson.Gson;
import com.oreilly.servlet.MultipartRequest;
import com.oreilly.servlet.multipart.DefaultFileRenamePolicy;

@Controller
public class PcController {

	@Autowired
	NoticeDao noticeDao;

	@Autowired
	FaqDao faqDao;

	@Autowired
	QnaDao qnaDao;

	@Autowired
	EventDao eventDao;
	
	@Autowired
	EventCommentDao eventCommentDao;
	
	@Autowired
	UserDao userDao;

	@Autowired
	SiteDao siteDao;

	@Autowired
	private SidoDao sidoDao;

	
	@Autowired BannerAdDao bannerAdDao;
	
	// 페이지당 아이템 갯수
	@Value("#{config['page.itemCountPerPage']}")
	int ITEM_COUNT_PER_PAGE;

	// 페이징당 페이지 갯수
	@Value("#{config['page.pageCountPerPaging']}")
	int PAGE_COUNT_PER_PAGING;

	// 파일 루트
	@Value("#{config['file.root']}")
	String FILE_ROOT;

	String FILE_PATH = "";
	String FILE_LOCAL_PATH = "";

	// 파일 최대크기(Mb)
	@Value("#{config['file.maxSize']}")
	int FILE_MAX_SIZE;

	// 채팅방
	@RequestMapping("/pc/chat_list.go")
	public String pcChatListController(
			HttpSession session, Model model) {

		return "/pc/chat_list";
	}

	// 채팅방 생성
	@RequestMapping("/pc/chat_add.go")
	public String pcChatAddController(
			HttpSession session, Model model) {

		return "/pc/chat_add";
	}
	
	// 회원 관리 > 가상회원
	@RequestMapping("/pc/chat_user.go")
	public String imagineController(
			@RequestParam(value = "agentId", required = false, defaultValue = "") String agentId,
			HttpSession session, Model model) {

		List location = sidoDao.getSidoList();
		List site = siteDao.getSiteList();
		User user = userDao.getUser(agentId);

		model.addAttribute("user", user);
		model.addAttribute("site", site);
		model.addAttribute("location", location);
		return "/pc/chat_user";
	}

	// 회원 관리 > 가상회원 리스트
	@RequestMapping("/pc/chat_user_list.go")
	public String imagineListController(
			@RequestParam(value = "page", required = false, defaultValue = "1") int page,
			@RequestParam(value = "agentId", required = false, defaultValue = "") String agentId,
			@RequestParam(value = "gender", required = false, defaultValue = "0") int gender,
			@RequestParam(value = "age", required = false, defaultValue = "0") int age,
			@RequestParam(value = "areaSido", required = false, defaultValue = "") String areaSido,
			@RequestParam(value = "keyword", required = false, defaultValue = "") String keyword,
			@RequestParam(value = "colname", required = false, defaultValue = "") String colName,
			@RequestParam(value = "sort", required = false, defaultValue = "") String sort,
			HttpSession session, Model model) {

		List<User> list = null;
		int count = 0;

		list = userDao.getUserImagineList(agentId, gender, age, keyword,areaSido, colName, sort, page, ITEM_COUNT_PER_PAGE);
		count = userDao.getImagineCount(agentId, gender, age, keyword,areaSido);

		// 페이징
		String paging = Paging.getPaging(page, count, ITEM_COUNT_PER_PAGE,PAGE_COUNT_PER_PAGING);

		model.addAttribute("list", list);
		model.addAttribute("paging", paging);
		model.addAttribute("keyword", keyword);
		model.addAttribute("currentPage", page);
		return "/pc/chat_user_list";
	}


	// 토크 리스트
	@RequestMapping("/pc/talk_list.go")
	public String pcTalkListController(
			HttpSession session, Model model) {

		return "/pc/talk_list";
	}

	// 토크 상세
	@RequestMapping("/pc/talk_view.go")
	public String pcTalkViewController(
			HttpSession session, Model model) {

		return "/pc/talk_view";
	}

	// 토크 작성
	@RequestMapping("/pc/talk_edit.go")
	public String pcTalkEditController(
			HttpSession session, Model model) {

		return "/pc/talk_edit";
	}
	
	
}
